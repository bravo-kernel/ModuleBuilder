<?xml version="1.0" encoding="utf-8"?>
<plasterManifest schemaVersion="1.1"
                 templateType="Project"
                 xmlns="http://www.microsoft.com/schemas/PowerShell/Plaster/v1">
  <metadata>
    <name>NewPowerShellScriptModule</name>
    <id>2a7c3f58-4a45-4d55-9b07-753ac7608114</id>
    <version>0.0.1</version>
    <title>New ModuleBuilder Module</title>
    <description>Creates a new ModuleBuilder-ready Powershell module.</description>
    <author>PoshCode</author>
    <tags>Module, ScriptModule, ModuleBuilder</tags>
  </metadata>

  <!-- user/hash input -->
  <parameters>
    <parameter name='ModuleName'
               type='text'
               prompt='Enter the name of the module'/>

    <parameter name='Author'
               type='text'
               prompt='Enter the name of the author'/>
  </parameters>

  <content>
    <message>&#10;&#10;Scaffolding your PowerShell ModuleBuilder Module...&#10;&#10;&#10;</message>

    <!-- Recursively copy the template folder -->
    <templateFile source='template\**'
                  destination='' />

    <!-- Replace placeholder tokens with Plaster parameter variables -->
    <modify path='LICENSE'>
      <replace>
        <original>{{ModuleAuthor}}</original>
        <substitute expand='true'>${PLASTER_PARAM_Author}</substitute>
      </replace>
    </modify>


    <!-- Think about using/not using these prerequisite-checks. Should not conflict with ModuleBuilder `RequiredModules`. -->
    <requireModule name="Pester"
                   minimumVersion="4.0.3"
                   maximumVersion="5.0"
                   message="Without Pester, you will not be able to run the provided Pester test to validate your module manifest file.`nWithout version 4.0.3, VS Code will not display Pester warnings and errors in the Problems panel."/>

    <!-- User feedback after completion, could point to ModuleBuilder docs, etc. -->
    <message>

Your new PowerShell module project '$PLASTER_PARAM_ModuleName' has been created.

    </message>

    <message>
A Pester test has been created to validate the module's manifest file.  Add additional tests to the test directory.
You can run the Pester tests in your project by executing the 'test' task.  Press Ctrl+P, then type 'task test'.

    </message>

  </content>
</plasterManifest>
